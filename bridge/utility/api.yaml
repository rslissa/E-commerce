swagger: "2.0"
info:
  description: "This is an API for a wine-olive oil e-shop"
  version: "1.0.0"
  title: "e-shop"
  contact:
    email: "rs.lissa1997@gmail.com"

host: "localhost"
basePath: "/bridge/v1"

tags:
  - name: "product"
    description: "Operations about product"
  - name: "cart"
    description: "Operations about cart"
  - name: "cartProduct"
    description: "Operations abount the products in a specific cart"
  - name: "country"
    description: "Operations about countries"
  - name: "sub countries"
    description: "Operations about countries subdivisions"
schemes:
  - "http"

paths:
  /product:
    post:
      tags:
      - "product"
      summary: "Add a new product to the store"
      description: "Add a new product to the store"
      operationId: "addProduct"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Product object that needs to be added to the store"
        required: true
        schema:
          $ref: "#/definitions/PostProduct"
      responses:
        "201":
          description: "Created"
        "400":
          description: "Invalid input"
  /product/{productId}:
    get:
      tags:
      - "product"
      summary: "Find product by name"
      description: "Returns a single product"
      operationId: "getProductByName"
      produces:
      - "application/json"
      parameters:
      - name: "productId"
        in: "path"
        description: "id of product to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Product"
        "400":
          description: "Invalid id supplied"
        "404":
          description: "Product not found"
    delete:
      tags:
      - "product"
      summary: "Deletes a product"
      description: "Delete a product"
      operationId: "deleteProduct"
      produces:
      - "application/json"
      parameters:
      - name: "productId"
        in: "path"
        description: "id of product to delete"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "400":
          description: "Invalid id supplied"
        "404":
          description: "product not found"
  /list-products:
    get:
        tags:
          - "product"
        summary: "List all the products in the store"
        description: "List all the products in the store"
        operationId: "listProducts"
        produces:
          - "application/json"
        responses:
          "200":
            description: "successful operation"
            schema:
              $ref: "#/definitions/AllProducts"
          "404":
            description: "Products not found"
  /list-products-by-cart/{cartId}:
    get:
        tags:
          - "product"
        summary: " Given a cart id return a list of all the products in the cart"
        description: " Given a cart id return a list of all the products in the cart"
        operationId: "listProductsByCart"
        produces:
          - "application/json"
        parameters:
          - name: "cartId"
            in: "path"
            description: "Id of the cart"
            required: true
            type: "integer"
            format: "int64"
        responses:
          "200":
            description: "successful operation"
            schema:
              $ref: "#/definitions/AllProducts"
          "404":
            description: "Products not found"
  /cart:
    post:
      tags:
        - "cart"
      summary: "Create a new cart"
      operationId: "createCart"
      consumes:
      - "application/json"
      produces:
        - "application/json"

      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Cart"
  /cart/{cartId}:
    get:
      tags:
        - "cart"
      summary: "Get cart by id"
      description: ""
      operationId: "getCartById"
      produces:
        - "application/json"
      parameters:
        - name: "cartId"
          in: "path"
          required: true
          type: "integer"
          format: "int64"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Cart"
        "400":
          description: "Invalid id supplied"
        "404":
          description: "User not found"
    delete:
      tags:
      - "cart"
      summary: "Delete the all the products inside a specific cart"
      description: "Delete the all the products inside a specific cart"
      operationId: "deleteCartProducts"
      produces:
      - "application/json"
      parameters:
      - name: "cartId"
        in: "path"
        description: "id of the cart"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "400":
          description: "Invalid ids supplied"
        "404":
          description: "cart not found"
  /cart/{cartId}/product/{productId}:
    get:
      tags:
        - "cartProduct"
      summary: "get a specific product - cart"
      operationId: "GetProductCart"
      produces:
        - "application/json"
      parameters:
        - name: "cartId"
          in: "path"
          description: "Id of the cart"
          required: true
          type: "integer"
          format: "int64"
        - name: "productId"
          in: "path"
          description: "Id of the product to insert in the cart"
          required: true
          type: "integer"
          format: "int64"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/CartProduct"
    post:
      tags:
        - "cartProduct"
      summary: "Update a product to cart"
      description: "Update a product to cart"
      operationId: "updateProductToCart"
      produces:
        - "application/json"
      parameters:
        - name: "cartId"
          in: "path"
          description: "Id of the cart"
          required: true
          type: "integer"
          format: "int64"
        - name: "productId"
          in: "path"
          description: "Id of the product to insert in the cart"
          required: true
          type: "integer"
          format: "int64"
        - in: "body"
          name: "body"
          description: "Created cart object"
          required: true
          schema:
            type: "object"
            required:
              - "operation"
              - "quantity"
            properties:
              operation:
                type: "string"
                enum: [add, sub]
                maxLength: 3
                minLength: 3
              quantity:
                type: "integer"
                format: "int64"
                example: 2
              last_update:
                type: "string"
                format: "date-time"
      responses:
        "200":
          description: "successful operation"
    put:
      tags:
        - "cartProduct"
      summary: "Overwrite a product to cart"
      description: "Overwrite a product to cart"
      operationId: "OverwriteProductToCart"
      produces:
        - "application/json"
      parameters:
        - name: "cartId"
          in: "path"
          description: "Id of the cart"
          required: true
          type: "integer"
          format: "int64"
        - name: "productId"
          in: "path"
          description: "Id of the product to insert in the cart"
          required: true
          type: "integer"
          format: "int64"
        - in: "body"
          name: "body"
          description: "Created cart object"
          required: true
          schema:
            type: "object"
            required:
              - "operation"
              - "quantity"
            properties:
              quantity:
                type: "integer"
                format: "int64"
                example: 2
              last_update:
                type: "string"
                format: "date-time"
      responses:
        "200":
          description: "successful operation"
    delete:
      tags:
      - "cartProduct"
      summary: "Delete the product inside cart"
      description: "Delete the product inside cart"
      operationId: "deleteCartProduct"
      produces:
      - "application/json"
      parameters:
      - name: "cartId"
        in: "path"
        description: "id of the cart"
        required: true
        type: "integer"
        format: "int64"
      - name: "productId"
        in: "path"
        description: "id of the product"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "400":
          description: "Invalid ids supplied"
        "404":
          description: "relation not found"
  /list-countries:
    get:
      tags:
        - "country"
      summary: "List all the countries"
      operationId: "ListCountries"
      produces:
        - "application/json"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/AllCountries"
        "404":
          description: "Countries not found"
  /country/{countryCode}:
    get:
      tags:
        - "country"
      summary: "Find country by code"
      description: "Returns a single country"
      operationId: "getCOuntryByCode"
      produces:
        - "application/json"
      parameters:
        - name: "countryCode"
          in: "path"
          description: "code of country to return"
          required: true
          type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Country"
        "400":
          description: "Invalid code supplied"
        "404":
          description: "code not found"
  /list-subcountries/{countryCode}:
    get:
      tags:
        - "sub countries"
      summary: "List all the countries subdivisions of a specific country"
      operationId: "ListSubCountries"
      produces:
        - "application/json"
      parameters:
        - name: "countryCode"
          in: "path"
          description: "code of country to return"
          required: true
          type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/AllSubCountries"
        "404":
          description: "Sub Countries not found"

definitions:
  Country:
    type: "object"
    properties:
      country_code:
        type: "string"
        example: "IT"
        maxLength: 2
        minLength: 2
      name:
        type: "string"
        example: "Italia"
  AllCountries:
    type: array
    items:
      $ref: '#/definitions/Country'
  CountrySubdivisions:
    type: "object"
    properties:
      id_subdivision:
        type: "integer"
        format: "int64"
      code:
        type: "string"
        example: "RG"
        maxLength: 2
        minLength: 2
      name:
        type: "string"
        example: "Ragusa"
  AllSubCountries:
    type: array
    items:
      $ref: '#/definitions/CountrySubdivisions'
  Cart:
    type: "object"
    required:
      - id_cart
      - creation
      - last_update
      - expiring_date
      - total_items
      - total_unique_items
      - total_price
    properties:
      id_cart:
        type: "integer"
        format: "int64"
      creation:
        type: "string"
        format: "date-time"
      last_update:
        type: "string"
        format: "date-time"
      buyed:
        type: "boolean"
      id_user:
        type: "integer"
        format: "int64"
      expiring_date:
        type: "string"
        format: "date-time"
      total_items:
        type: "integer"
        format: "int64"
        example: 3
      total_unique_items:
        type: "integer"
        format: "int64"
        example: 2
      total_price:
        type: "integer"
        format: "int64"
        example: 50
  CartProduct:
    type: "object"
    properties:
      id_cart:
        type: "integer"
        format: "int64"
      id_product:
        type: "integer"
        format: "int64"
      quantity:
        type: "integer"
        format: "int64"
        example: 30
      last_update:
        type: "string"
        format: "date-time"
  Product:
    type: "object"
    required:
      - "name"
      - "description"
      - "price"
      - "currencyCode"
      - "status"
    properties:
      id_product:
        type: "integer"
        format: "int64"
      name:
        type: "string"
        example: "nero d'avola"
      description:
        type: "string"
        example: "è un vino molto buono"
      price:
        type: "integer"
        format: "int64"
        example: 15
      currencyCode:
        type: "string"
        maxLength: 3
        minLength: 3
        example: "EUR"
      status:
        type: "boolean"
      imageURL:
        type: "string"
        example: "https://i.ibb.co/L9p2D14/vino-rosso.jpg"
      stock:
        type: "integer"
        format: "int64"
        example: 30
      last_update:
        type: "string"
        format: "date-time"
  PostProduct:
    type: "object"
    required:
      - "description"
      - "price"
      - "currencyCode"
      - "status"
      - "stock"
      - "last_update"
    properties:
      name:
        type: "string"
        example: "nero d'avola"
      description:
        type: "string"
        example: "è un vino molto buono"
      price:
        type: "integer"
        format: "int64"
      currencyCode:
        type: "string"
        maxLength: 3
        minLength: 3
        example: "EUR"
      status:
        type: "boolean"
      imageURL:
        type: "string"
        example: "https://i.ibb.co/St8ZK3B/vino-bianco-2.jpg"
      stock:
        type: "integer"
        format: "int64"
        example: 30
      last_update:
        type: "string"
        format: "date-time"
  AllProducts:
    type: array
    items:
      $ref: '#/definitions/Product'
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"
